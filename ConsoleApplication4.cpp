// ConsoleApplication4.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
class Figure {
public:
    Figure()
    {
        sides_count = 0;
        name = "Фигура";
    };
    int get_sides_count()
    {
        return sides_count;
    };
    std::string get_name()
    {
        return name;
    };
protected:
    std::string name;
    int sides_count;

};

class Triangle : public Figure
{
public:
    Triangle()
    {
        sides_count = 3;
        name = "Треугольник";
    };
};

class Quadrangle : public Figure
{
public:
    Quadrangle()
    {
        sides_count = 4;
        name = "Четырехугольник";
    };

};



int main()
{
    setlocale(LC_ALL, "Russian");
   //std::cout << "Hello World!\n";

    Figure  a;
    Triangle b;
    Quadrangle c;
    std::cout << a.get_name() << ", Количество сторон: " << a.get_sides_count() << std::endl;
    std::cout << b.get_name() << ", Количество сторон: " << b.get_sides_count() << std::endl;
    std::cout << c.get_name()<< ", Количество сторон: " << c.get_sides_count() << std::endl;


}

/*
В этом задании вы построите первую простую иерархию классов для заданной предметной области.
Предметная область выглядит следующим образом: есть сущность фигура. Фигуры бывают двух типов: треугольник и четырёхугольник. 
У фигуры есть количество сторон. Для неизвестной фигуры будем считать это количество равным нулю. У треугольника три стороны, у четырёхугольника четыре стороны. 
У любой фигуры мы хотим узнавать количество её сторон, но мы не должны быть способны изменить количество сторон для заданной фигуры извне.
Задача: спроектировать и реализовать классы, описывающие предметную область. 
Продемонстрируйте их работу: создайте по одному экземпляру каждого класса и выведите информацию о количестве его сторон на консоль.
Пример работы программы
Консоль

Количество сторон:
Фигура: 0
Треугольник: 3
Четырёхугольник: 4

*/

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
